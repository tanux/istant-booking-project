<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx"		 
		 xmlns:component="view.component.*"
		 xmlns:vo="vo.*"
		 width="100%" height="100%">		 	
	<fx:Declarations>
		<fx:Object id="successIcon" icon="@Embed(source='assets/images/ok.png')" />
		<fx:Object id="errorIcon" icon="@Embed(source='assets/images/error.png')" />
		
		<mx:PhoneNumberValidator id="pnV" 
								 source="{tiTelephoneNumber.textInput}" property="text"
								 invalidCharError="Il numero inserito contiene caratteri non numerici!"/>
		<mx:EmailValidator id="emV" source="{tiEmail.textInput}" property="text"
						   invalidCharError="La mail non contiene il simbolo @. Ricontrollare l'indirizzo."/>
		
	</fx:Declarations>	
	<fx:Script>
		<![CDATA[			
			
			import model.vo.Customer;
			import model.vo.CustomerInList;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.ListEvent;			
						
			private var facade:ApplicationFacade = ApplicationFacade.getInstance() as ApplicationFacade;
			[Bindable]public var customerList:ArrayCollection;
			private function makeDataLabel(item:Object) : String {
				var c:Customer = new Customer();
				c.id = item.id;
				c.firstName = item.firstname;
				c.lastName = item.lastname;
				c.email = item.email;
				c.telephoneNumber = item.telephone_number;
				return c.firstName + " " + c.lastName + " " + c.email;
			}
			
			protected function dgCustomerList_itemClickHandler(event:ListEvent):void{				
				var selectedRow:Object = event.currentTarget.selectedItem;
				var c:Customer = new Customer();
				c.id = selectedRow.id;
				c.firstName = selectedRow.firstname;
				c.lastName = selectedRow.lastname;
				c.email = selectedRow.email;
				c.telephoneNumber = selectedRow.telephone_number;
				var position:int = event.currentTarget.selectedIndex;
				var customerInList:CustomerInList = new CustomerInList(c,position);				
				facade.sendNotification(ApplicationFacade.CUSTOMER_SELECTED, customerInList);				
			}
			
			import mx.rpc.events.FaultEvent;
			import mx.collections.ArrayCollection;
			import mx.rpc.events.ResultEvent;
			import mx.controls.Alert;
			
			
			
			
			private function getDataSuccess(returnedEvent:ResultEvent):void{
				customerList = returnedEvent.result as ArrayCollection;
				this.enabled = true;
			}
			
			private function init():void{				
				this.enabled = false;
			}
			
			private function fault(f:FaultEvent):void{
				Alert.show(f.fault.message as String);
			}
			
			private function filterPhrase():void{
				customerList.filterFunction = filterFirst;
				customerList.refresh();
			} 
			
			//if true it show results, if false it shows nothing
			private function filterFirst(row:Object):Boolean
			{
				if(searchText.length == 0){
					return true;
				}
				
				var columnName:String;
				var columnValue:String;
				var keywords:Array = searchText.text.split(" ");
				var wordFound:Boolean;
				
				// Loop Over Words
				for(var word:int = 0; word < keywords.length; word++) {
					wordFound = false;
					// Loop Over Columns
					for( var column:int = 0; column < dgCustomerList.columnCount; column++){
						columnName = dgCustomerList.columns[column].dataField;
						if (row[columnName] != null) {
							columnValue = row[columnName];
							columnValue = columnValue.toLowerCase();
							if(columnValue.search(keywords[word].toLowerCase()) >= 0 ) {
								wordFound = true;
								break;
							} 
						}
					}
					if (!wordFound) return false;
				}
				return true;
			}
			
			import mx.validators.Validator;
			import mx.validators.ValidationResult;
			import mx.events.ValidationResultEvent;
			
			protected function submit_clickHandler(event:MouseEvent):void
			{
				Alert.show("Form valido. Invio Dati");
			}
			
			private function mayEnableButton():void
			{
				btnAddUser.enabled = (Validator.validateAll([pnV, emV]).length == 0);
			}
		]]>
	</fx:Script>
	
	
	<mx:HBox width="100%" textAlign="left" horizontalAlign="right" verticalAlign="middle">
		<mx:Canvas>
			<mx:TextInput id="searchText" paddingLeft="20" change="filterPhrase()"/>			
			<mx:Box width="100%" height="90%" paddingTop="2" paddingLeft="2">
				<mx:Image source="assets/images/find.png" height="20" />	
			</mx:Box>			
		</mx:Canvas>
	</mx:HBox>
	
	<mx:DataGrid id="dgCustomerList" width="100%" height="50%" dataProvider="{customerList}" doubleClickEnabled="true" itemClick="dgCustomerList_itemClickHandler(event)">
		<mx:columns>
			<mx:DataGridColumn id="clmId" dataField="id" headerText="Id" visible="false"/>
			<mx:DataGridColumn id="clmNome" dataField="firstname" headerText="Nome" />
			<mx:DataGridColumn id="clmCognome" dataField="lastname" headerText="Cognome" />
			<mx:DataGridColumn id="clmEMail" dataField="email" headerText="E-Mail" />
			<mx:DataGridColumn id="clmTel" dataField="telephone_number" headerText="Telefono" />
		</mx:columns>
	</mx:DataGrid>
	<mx:HBox>
		<component:TIClearOnClick id="tiFirstname" text="Nome"/>
		<component:TIClearOnClick id="tiLastname" text="Cognome" />
		<component:TIClearOnClick id="tiEmail" text="E-mail" />
		<component:TIClearOnClick id="tiTelephoneNumber" text="Telefono" />
	</mx:HBox>
	<mx:HBox width="100%" horizontalAlign="right">
		<mx:Button id="btnAddUser" icon="@Embed(source='assets/images/add_user.png')" downIcon="@Embed(source='assets/images/add_user_little.png')"
				   width="45" height="40" enabled="true" click="submit_clickHandler(event)"/>
		<mx:Button id="btnDelUser" icon="@Embed(source='assets/images/delete_user.png')" downIcon="@Embed(source='assets/images/delete_user_little.png')"
				   width="45" height="40" enabled="false"/>
		<mx:Button id="btnSave" icon="@Embed(source='assets/images/save.png')" downIcon="@Embed(source='assets/images/save_little.png')"
				   width="45" height="40" enabled="false"/>
		<mx:Button id="btnBooking" icon="@Embed(source='assets/images/prenota.png')" downIcon="@Embed(source='assets/images/prenota_little.png')"
				   width="45" height="40"/>
	</mx:HBox>

</mx:VBox>