<?xml version="1.0" encoding="utf-8"?>
<!-- http://blog.flexexamples.com/2010/01/20/setting-the-pop-up-position-on-a-spark-popupanchor-control-in-flex-4/ -->
<s:Application name="Spark_PopUpAnchor_popUpPosition_test"
			   xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx">
	<s:controlBarContent>
		<mx:Form>
			<mx:FormItem label="popUpPosition:">
				<s:ButtonBar id="ddl"
							 requireSelection="true"
							 click="ddl_changeHandler(event);"
							 >
					<s:dataProvider>
						<s:ArrayList>
							<s:source>
								<fx:String>{PopUpPosition.ABOVE}</fx:String>
								<fx:String>{PopUpPosition.BELOW}</fx:String>
								<fx:String>{PopUpPosition.CENTER}</fx:String>
								<fx:String>{PopUpPosition.LEFT}</fx:String>
								<fx:String>{PopUpPosition.RIGHT}</fx:String>
								<fx:String>{PopUpPosition.TOP_LEFT}</fx:String>
							</s:source>
						</s:ArrayList>
					</s:dataProvider>
				</s:ButtonBar>
			</mx:FormItem>
		</mx:Form>
	</s:controlBarContent>
	<fx:Declarations>
		<s:LinearGradient rotation="90" id="fill1">
			<s:GradientEntry color="0xFFFFFF" />
			<s:GradientEntry color="0x336699" />
		</s:LinearGradient>
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.events.CloseEvent;
			import spark.components.PopUpPosition;
			import spark.events.IndexChangeEvent;
			import spark.events.TitleWindowBoundsEvent;
			
			protected function btn_clickHandler(evt:MouseEvent):void {
				popAnc.displayPopUp = true;
			}
			
			protected function ttlWndw_closeHandler(evt:CloseEvent):void {
				popAnc.displayPopUp = false;
			}
			
			protected function ttlWndw_windowMovingHandler(evt:TitleWindowBoundsEvent):void {
				evt.stopImmediatePropagation();
				evt.preventDefault();
			}
			
			protected function ddl_changeHandler(evt:Event):void {
				if (!popAnc.displayPopUp) {
					popAnc.displayPopUp = true;
				}
			}
			
			import mx.controls.Alert;
			protected function handleClose(event:MouseEvent):void
			{
				Alert.show("TEST");
				this.currentState="normal";
			}
		]]>
	</fx:Script>
	
	<s:states>
		<s:State name="normal" />
		<s:State name="infoOpen" />
	</s:states>
	
	<s:Group horizontalCenter="0" verticalCenter="0">
		<s:Image id="btn" source="@Embed('/assets/images/info.png')" click="btn_clickHandler(event); currentState = 'infoOpen'"/>
		
		<s:PopUpAnchor id="popAnc"
					   popUpPosition="{ddl.selectedItem}"
					   width="{btn.width}" height="{btn.height}"
					   displayPopUp.normal="false"
					   displayPopUp.infoOpen="true">
			
				<s:BorderContainer cornerRadius="5" backgroundFill="{fill1}" height="160" width="180" 
								   dropShadowVisible="true">
					<s:Label horizontalCenter="0" top="20" width="170" height="155" color="0x323232" 
							 text="Dai cazzo!!!"/>
					
					<s:Image source="@Embed('/assets/images/cross.png')" top="2" right="2" width="16" height="16" click="handleClose(event)" />
				</s:BorderContainer>
			
		</s:PopUpAnchor>
	</s:Group>
	
</s:Application>
